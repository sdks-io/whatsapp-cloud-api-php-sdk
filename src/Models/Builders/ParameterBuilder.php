<?php

declare(strict_types=1);

/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace WhatsAppCloudAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use WhatsAppCloudAPILib\Models\Currency;
use WhatsAppCloudAPILib\Models\DateTimeObject;
use WhatsAppCloudAPILib\Models\Document;
use WhatsAppCloudAPILib\Models\Image;
use WhatsAppCloudAPILib\Models\Parameter;
use WhatsAppCloudAPILib\Models\Video;

/**
 * Builder for model Parameter
 *
 * @see Parameter
 */
class ParameterBuilder
{
    /**
     * @var Parameter
     */
    private $instance;

    private function __construct(Parameter $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new parameter Builder object.
     */
    public static function init(string $type): self
    {
        return new self(new Parameter($type));
    }

    /**
     * Sets text field.
     */
    public function text(?string $value): self
    {
        $this->instance->setText($value);
        return $this;
    }

    /**
     * Sets currency field.
     */
    public function currency(?Currency $value): self
    {
        $this->instance->setCurrency($value);
        return $this;
    }

    /**
     * Sets date time field.
     */
    public function dateTime(?DateTimeObject $value): self
    {
        $this->instance->setDateTime($value);
        return $this;
    }

    /**
     * Sets image field.
     */
    public function image(?Image $value): self
    {
        $this->instance->setImage($value);
        return $this;
    }

    /**
     * Sets document field.
     */
    public function document(?Document $value): self
    {
        $this->instance->setDocument($value);
        return $this;
    }

    /**
     * Sets video field.
     */
    public function video(?Video $value): self
    {
        $this->instance->setVideo($value);
        return $this;
    }

    /**
     * Initializes a new parameter object.
     */
    public function build(): Parameter
    {
        return CoreHelper::clone($this->instance);
    }
}

<?php

declare(strict_types=1);

/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace WhatsAppCloudAPILib\Controllers;

use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\HeaderParam;
use Core\Request\Parameters\TemplateParam;
use CoreInterfaces\Core\Request\RequestMethod;
use WhatsAppCloudAPILib\Exceptions\ApiException;
use WhatsAppCloudAPILib\Models\ContentTypeEnum;
use WhatsAppCloudAPILib\Models\RegisterPhoneRequest;
use WhatsAppCloudAPILib\Models\SuccessResponse;

class RegistrationController extends BaseController
{
    /**
     * Used to register a phone number or to migrate WhatsApp Business Accounts from a current On-Premises
     * deployment to the new Cloud-Based API. Business Solution Providers (BSPs) must authenticate
     * themselves with an access token with the whatsapp_business_management permission.
     *
     * @param string $phoneNumberID
     * @param RegisterPhoneRequest $body
     *
     * @return SuccessResponse Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function registerPhone(string $phoneNumberID, RegisterPhoneRequest $body): SuccessResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/{Phone-Number-ID}/register')
            ->auth('global')
            ->parameters(
                TemplateParam::init('Phone-Number-ID', $phoneNumberID),
                HeaderParam::init('Content-Type', 'application/json'),
                BodyParam::init($body)
            );

        $_resHandler = $this->responseHandler()->type(SuccessResponse::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Used to deregister a phone number. Deregister phone removes a previously registered phone. You can
     * always re-register your phone using by repeating the registration process. Business Solution
     * Providers (BSPs) must authenticate themselves with an access token with the
     * whatsapp_business_management permission.
     *
     * @param string $contentType
     * @param string $phoneNumberID
     *
     * @return SuccessResponse Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function deregisterPhone(string $contentType, string $phoneNumberID): SuccessResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/{Phone-Number-ID}/deregister')
            ->auth('global')
            ->parameters(
                HeaderParam::init('Content-Type', $contentType)->serializeBy([ContentTypeEnum::class, 'checkValue']),
                TemplateParam::init('Phone-Number-ID', $phoneNumberID)
            );

        $_resHandler = $this->responseHandler()->type(SuccessResponse::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
